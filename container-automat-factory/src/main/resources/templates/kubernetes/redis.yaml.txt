apiVersion: v1
kind: Service
metadata:
  name: container-automat-redis
  labels:
    container-automat-storage: redis
spec:  # A headless service (type ClusterIP with clusterIP None) that makes Redis available in the Kubernetes cluster.
  selector:
    container-automat-storage: redis  # Reference to the label of the pods used by the service.
  ports:
  - port: 6379     # Port that the service makes available to the outside world. Note: targetPort is not used for services with clusterIP=None.
    name: redis    # Unique name of the port within the service. Optional if only 1 port is defined.
  type: ClusterIP  # Can be omitted as ClusterIP is the default value.
  clusterIP: None  # Results in a headless service, which is necessary for StatefulSet.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: container-automat-redis
  labels:
    container-automat-storage: redis
spec:
  serviceName: container-automat-redis
  selector:
    matchLabels:
      container-automat-storage: redis  # Reference to .spec.template.metadata.labels.
  replicas: 1
  template:
    metadata:
      labels:
        container-automat-storage: redis  # Matching .spec.selector.matchLabels.
    spec:
      restartPolicy: Always  # Always by default, alternatively OnFailure or Never.
      automountServiceAccountToken: false
      containers:
      - name: redis
        image: redis:7.2.4-alpine
        command: ["redis-server"]
        args: ["--save", "60", "1", "--loglevel", "warning", "--requirepass", "$(REDIS_PASSWORD)"]
        resources:
          requests:
            cpu: "300m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
            ephemeral-storage: "512Mi"
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: container-automat-env-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: container-automat-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: container-automat-redis-data  # Matching a .spec.volumeClaimTemplates[x].metadata.name.
          mountPath: /data
        startupProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 17
          failureThreshold: 20
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          timeoutSeconds: 10
          periodSeconds: 23
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          timeoutSeconds: 10
          periodSeconds: 19
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: container-automat-redis-data  # Matching a .spec.template.containers[x].volumeMounts[x].name.
    spec:
      accessModes:
      - ReadWriteOnce  # Read/Write by 1 node (several pods if necessary). Alternatively: ReadOnlyMany, ReadWriteMany, ReadWriteOncePod.
      resources:
         requests:
           storage: 200Mi

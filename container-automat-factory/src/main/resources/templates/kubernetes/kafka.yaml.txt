apiVersion: v1
kind: Service
metadata:
  name: container-automat-kafka
  labels:
    container-automat-messaging: kafka
spec:  # A headless service (type ClusterIP with clusterIP None) that makes Kafka available in the Kubernetes cluster.
  selector:
    container-automat-messaging: kafka  # Reference to the label of the pods used by the service.
  ports:
  - port: 9092         # Port that the service makes available to the outside world. Note: targetPort is not used for services with clusterIP=None.
    name: kcontainer   # Unique name of the port within the service.
  - port: 19092
    name: khost
  - port: 29093
    name: kcontroller
  type: ClusterIP      # Can be omitted as ClusterIP is the default value.
  clusterIP: None      # Results in a headless service, which is necessary for StatefulSet.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: container-automat-kafka
  labels:
    container-automat-messaging: kafka
spec:
  serviceName: container-automat-kafka
  selector:
    matchLabels:
      container-automat-messaging: kafka  # Reference to .spec.template.metadata.labels.
  replicas: 1
  template:
    metadata:
      labels:
        container-automat-messaging: kafka  # Matching .spec.selector.matchLabels.
    spec:
      restartPolicy: Always  # Always by default, alternatively OnFailure or Never.
      hostname: container-automat-kafka
      automountServiceAccountToken: false
      containers:
      - name: kafka
        image: apache/kafka:3.7.0
        resources:
          requests:
            cpu: "300m"
            memory: "512Mi"
          limits:
            cpu: "750m"
            memory: "1024Mi"
            ephemeral-storage: "512Mi"
        ports:
        - containerPort: 9092
          name: kcontainer
        - containerPort: 19092
          name: khost
        - containerPort: 29093
          name: kcontroller
        env:
        - name: KAFKA_CONTAINERPORT
          valueFrom:
            configMapKeyRef:
              name: container-automat-env-config
              key: KAFKA_CONTAINERPORT
        - name: KAFKA_HOSTPORT
          valueFrom:
            configMapKeyRef:
              name: container-automat-env-config
              key: KAFKA_HOSTPORT
        - name: KAFKA_PORT
          valueFrom:
            configMapKeyRef:
              name: container-automat-env-config
              key: KAFKA_PORT
        envFrom:
        - configMapRef:
            name: container-automat-kafka-config
        volumeMounts:
        - name: container-automat-kafka-data  # Matching a .spec.volumeClaimTemplates[x].metadata.name.
          mountPath: /var/kafka/kraft-combined-logs
        startupProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 17
          failureThreshold: 20
        livenessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 10
          periodSeconds: 23
          failureThreshold: 5
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 10
          periodSeconds: 19
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: container-automat-kafka-data  # Matching a .spec.template.containers[x].volumeMounts[x].name.
    spec:
      accessModes:
      - ReadWriteOnce  # Read/Write by 1 node (several pods if necessary). Alternatively: ReadOnlyMany, ReadWriteMany, ReadWriteOncePod-
      resources:
        requests:
          storage: 200Mi


spring:
  application:
    name: "${containerautomat.state.name} ContainerAutomat State"
§KAFKA_START§
  kafka:
    bootstrap-servers: "container-automat-kafka:${KAFKA_PORT:9092}"
    client-id: "ContainerAutomatCommands${containerautomat.state.name}"
    consumer:
      group-id: "ContainerAutomatCommands${containerautomat.state.name}"
      key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
      value-deserializer: "org.springframework.kafka.support.serializer.JsonDeserializer"
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      key-serializer: "org.apache.kafka.common.serialization.StringSerializer"
      value-serializer: "org.springframework.kafka.support.serializer.JsonSerializer"
§KAFKA_END§
  profiles:
    active: state,§storage_type_lowercase§,§messaging_type_lowercase§

management:
  endpoints:
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
  health:
    redis:
      enabled: false

containerautomat:
  app:
    is-state: true
  dfa:
    resource-path: /dfa.json
  processing:
    min-duration-millis: 1000
    max-duration-millis: 3000